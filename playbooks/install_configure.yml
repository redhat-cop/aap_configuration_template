---
- name: Deploy Ansible Automation Platform
  hosts: "{{ env | default('dev') }}" # noqa: syntax-check
  connection: local
  vars_files:
    - "../vaults/{{ env }}.yml"
  tasks:
    - name: Include aap_setup_download role
      ansible.builtin.include_role:
        name: infra.aap_utilities.aap_setup_download

    - name: Include aap_setup_prepare role
      ansible.builtin.include_role:
        name: infra.aap_utilities.aap_setup_prepare

    - name: Include aap_setup_install role
      ansible.builtin.include_role:
        name: infra.aap_utilities.aap_setup_install

- name: Configure private automation hub after installation
  hosts: "{{ env | default('dev') }}" # noqa: syntax-check
  gather_facts: false
  connection: local
  vars_files:
    - "../vaults/{{ env }}.yml"
  tasks:
    - name: Include repository role
      ansible.builtin.include_role:
        name: infra.ah_configuration.repository

    - name: Include repository sync role
      ansible.builtin.include_role:
        name: infra.ah_configuration.repository_sync

    - name: Publish custom collections
      when: publish | default(false)
      block:
        - name: Include namespace role
          ansible.builtin.include_role:
            name: infra.ah_configuration.namespace

        - name: Include publish role
          ansible.builtin.include_role:
            name: infra.ah_configuration.publish

    - name: Include group role
      ansible.builtin.include_role:
        name: infra.ah_configuration.group
      when: ah_groups | length is not match('0')

    - name: Include user role
      ansible.builtin.include_role:
        name: infra.ah_configuration.user
      when: ah_users | length is not match('0')

- name: Configure ansible controller post installation
  hosts: "{{ env | default('dev') }}" # noqa: syntax-check
  vars_files:
    - "../vaults/{{ env }}.yml"
  connection: local
  tasks:
    - name: Get subscriptions with a filter
      awx.awx.subscriptions:
        username: "{{ rh_username }}"
        password: "{{ rh_password }}"
        filters:
          product_name: Red Hat Ansible Automation Platform
          support_level: Self-Support
        controller_host: "{{ controller_hostname }}"
        controller_username: "{{ controller_username }}"
        controller_password: "{{ controller_password }}"
        validate_certs: false
      register: subscription

    - name: Attach to a pool
      awx.awx.license:
        pool_id: "{{ subscription.subscriptions[0].pool_id }}"
        controller_host: "{{ controller_hostname }}"
        controller_username: "{{ controller_username }}"
        controller_password: "{{ controller_password }}"
        validate_certs: false

    - name: Include setting role
      ansible.builtin.include_role:
        name: infra.controller_configuration.settings
      when: controller_settings | length is not match('0')

    - name: Include organization role
      ansible.builtin.include_role:
        name: infra.controller_configuration.organizations
      vars:
        assign_galaxy_credentials_to_org: false
        assign_default_ee_to_org: false
      when: controller_organizations | length is not match('0')

    - name: Include labels role
      ansible.builtin.include_role:
        name: infra.controller_configuration.labels
      when: controller_labels | length is not match('0')

    - name: Include users role
      ansible.builtin.include_role:
        name: infra.controller_configuration.users
      vars:
        controller_configuration_users_secure_logging: true
      when: controller_user_accounts | length is not match('0')

    - name: Include teams role
      ansible.builtin.include_role:
        name: infra.controller_configuration.teams
      when: controller_teams | length is not match('0')

   # probably not good but kinda works, looking for better solutions,
   # you are better off removing this block and getting token into vault by hand
    - name: Figuring out AH token
      when: ah_token is not defined or ah_token['token'] is defined
      block:
        - name: Authenticate and get an API token from Automation Hub
          infra.ah_configuration.ah_token:
            ah_host: "{{ ah_host | default(groups['automationhub'][0]) }}"
            ah_username: "{{ ah_token_username | default('admin') }}"
            ah_password: "{{ ah_token_password }}"
            ah_path_prefix: 'galaxy' # this is for private automation hub
            validate_certs: false
          register: r_ah_token

        - name: Fixing format
          ansible.builtin.set_fact:
            ah_token: "{{ ah_token['token'] }}"
          when: r_ah_token['changed'] # noqa: no-handler
       # what needs to be done to guarantee this to work?

    - name: Include credential_types role
      ansible.builtin.include_role:
        name: infra.controller_configuration.credential_types
      when: controller_credential_types | length is not match('0')

    - name: Include credential role
      ansible.builtin.include_role:
        name: infra.controller_configuration.credentials
      vars:
        controller_configuration_credentials_secure_logging: true
      when: controller_credentials | length is not match('0')

    - name: Include credential_input_sources role
      ansible.builtin.include_role:
        name: infra.controller_configuration.credential_input_sources
      when: controller_credential_input_sources | length is not match('0')

    - name: Include instance_groups role
      ansible.builtin.include_role:
        name: infra.controller_configuration.instance_groups
      when: controller_instance_groups | length is not match('0')

    - name: Include execution_environments role
      ansible.builtin.include_role:
        name: infra.controller_configuration.execution_environments
      when: controller_execution_environments | length is not match('0')

    - name: Include organizations role
      ansible.builtin.include_role:
        name: infra.controller_configuration.organizations
      when: controller_organizations | length is not match('0')

    - name: Include projects role
      ansible.builtin.include_role:
        name: infra.controller_configuration.projects
      when: controller_projects | length is not match('0')

    - name: Include inventories role
      ansible.builtin.include_role:
        name: infra.controller_configuration.inventories
      when: controller_inventories | length is not match('0')

    - name: Include inventory_sources role
      ansible.builtin.include_role:
        name: infra.controller_configuration.inventory_sources
      when: controller_inventory_sources | length is not match('0')

    - name: Include inventory_source_update role
      ansible.builtin.include_role:
        name: infra.controller_configuration.inventory_source_update

    - name: Include groups role
      ansible.builtin.include_role:
        name: infra.controller_configuration.groups
      when: controller_groups | length is not match('0')

    - name: Include hosts role
      ansible.builtin.include_role:
        name: infra.controller_configuration.hosts
      when: controller_hosts | length is not match('0')

    - name: Include applications role
      ansible.builtin.include_role:
        name: infra.controller_configuration.applications
      when: controller_applications | length is not match('0')

    - name: Include job_templates role
      ansible.builtin.include_role:
        name: infra.controller_configuration.job_templates
      when: controller_templates | length is not match('0')

    - name: Include workflow_job_templates role
      ansible.builtin.include_role:
        name: infra.controller_configuration.workflow_job_templates
      when: controller_workflows | length is not match('0')

    - name: Include schedules role
      ansible.builtin.include_role:
        name: infra.controller_configuration.schedules
      when: controller_schedules | length is not match('0')

    - name: Include Notification role
      ansible.builtin.include_role:
        name: infra.controller_configuration.notification_templates
      when: controller_notifications | length is not match('0')

    - name: Include roles role
      ansible.builtin.include_role:
        name: infra.controller_configuration.roles
      when: controller_roles | length is not match('0')

    - name: Launch build execution environment job template
      awx.awx.job_launch:
        name: build_execution_environments
        controller_host:     "{{ controller_hostname }}"
        controller_username: "{{ controller_username }}"
        controller_password: "{{ controller_password }}"
        validate_certs:      "{{ controller_validate_certs }}"

...
