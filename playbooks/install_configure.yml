---
- name: Deploy Ansible Automation Platform
  hosts: "{{ env | default('dev') }}" # noqa: syntax-check
  connection: local
  vars_files:
    - "../vaults/{{ env }}.yml"
  tasks:
    - name: Include aap_setup_download role
      ansible.builtin.include_role:
        name: infra.aap_utilities.aap_setup_download

    - name: Include aap_setup_prepare role
      ansible.builtin.include_role:
        name: infra.aap_utilities.aap_setup_prepare

    - name: Include aap_setup_install role
      ansible.builtin.include_role:
        name: infra.aap_utilities.aap_setup_install

- name: Configure private automation hub after installation
  hosts: "{{ env | default('dev') }}" # noqa: syntax-check
  gather_facts: false
  connection: local
  vars_files:
    - "../vaults/{{ env }}.yml"
  tasks:
    - name: Call dispatch role
      ansible.builtin.include_role:
        name: infra.eda_configuration.dispatch

- name: Configure ansible controller post installation
  hosts: "{{ env | default('dev') }}" # noqa: syntax-check
  vars_files:
    - "../vaults/{{ env }}.yml"
  connection: local
  tasks:
    - name: Get subscriptions with a filter
      awx.awx.subscriptions:
        username: "{{ rh_username }}"
        password: "{{ rh_password }}"
        filters:
          product_name: Red Hat Ansible Automation Platform
          support_level: Self-Support
        controller_host: "{{ controller_hostname }}"
        controller_username: "{{ controller_username }}"
        controller_password: "{{ controller_password }}"
        validate_certs: false
      register: subscription

    - name: Attach to a pool
      awx.awx.license:
        pool_id: "{{ subscription.subscriptions[0].pool_id }}"
        controller_host: "{{ controller_hostname }}"
        controller_username: "{{ controller_username }}"
        controller_password: "{{ controller_password }}"
        validate_certs: false

    - name: Figuring out AH token
      when: ah_token is not defined or ah_token['token'] is defined
      block:
        - name: Authenticate and get an API token from Automation Hub
          infra.ah_configuration.ah_token:
            ah_host: "{{ ah_host | default(groups['automationhub'][0]) }}"
            ah_username: "{{ ah_token_username | default('admin') }}"
            ah_password: "{{ ah_token_password }}"
            ah_path_prefix: galaxy # this is for private automation hub
            validate_certs: false
          register: r_ah_token

        - name: Fixing format
          ansible.builtin.set_fact:
            ah_token: "{{ ah_token['token'] }}"
          when: r_ah_token['changed'] # noqa: no-handler

    - name: Call dispatch role
      ansible.builtin.include_role:
        name: infra.controller_configuration.dispatch

    - name: Launch build execution environment job template
      awx.awx.job_launch:
        name: build_execution_environments
        controller_host:     "{{ controller_hostname }}"
        controller_username: "{{ controller_username }}"
        controller_password: "{{ controller_password }}"
        validate_certs:      "{{ controller_validate_certs }}"

...
